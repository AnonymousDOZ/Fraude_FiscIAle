import numpy as np
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB

def tax_fraud_surveillance(tax_data, fraud_indicators):
    """
    Function for tax fraud surveillance using AI-based generative models.

    Parameters:
        tax_data (pandas DataFrame): DataFrame containing tax records.
        fraud_indicators (list): List of known tax fraud indicators.

    Returns:
        pandas DataFrame: DataFrame containing potential fraud cases.
    """

    # Extract relevant text features from tax data
    vectorizer = TfidfVectorizer()
    text_features = vectorizer.fit_transform(tax_data['description'])

    # Train a generative model to identify patterns associated with fraud
    fraud_model = MultinomialNB()
    fraud_model.fit(text_features, fraud_indicators)

    # Predict fraud likelihood for each tax record
    fraud_probabilities = fraud_model.predict_proba(text_features)

    # Identify potential fraud cases based on probability thresholds
    fraud_threshold = 0.5  # Set a threshold for fraud probability
    potential_fraud = tax_data[fraud_probabilities[:,1] > fraud_threshold]

    return potential_fraud
